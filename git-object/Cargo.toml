[package]
name = "git-object"
version = "0.23.0"
description = "Immutable and mutable git objects with decoding and encoding support"
authors = ["Sebastian Thiel <sebastian.thiel@icloud.com>"]
repository = "https://github.com/Byron/gitoxide"
license = "MIT/Apache-2.0"
edition = "2021"
include = ["src/**/*"]

[lib]
doctest = false

[features]
## Data structures implement `serde::Serialize` and `serde::Deserialize`.
serde1 = ["serde", "bstr/serde", "smallvec/serde", "git-hash/serde1", "git-actor/serde1"]
## When parsing objects by default errors will only be available on the granularity of success or failure, and with the above flag enabled
## details information about the error location will be collected.
## Use it in applications which expect broken or invalid objects or for debugging purposes. Incorrectly formatted objects aren't at all
## common otherwise.
verbose-object-parsing-errors = ["nom/std"]

[dependencies]
git-features = { version = "^0.24.0", path = "../git-features", features = ["rustsha1"] }
git-hash = { version = "^0.10.1", path = "../git-hash" }
git-validate = { version = "^0.7.0", path = "../git-validate" }
git-actor = { version = "^0.14.0", path = "../git-actor" }

btoi = "0.4.2"
itoa = "1.0.1"
thiserror = "1.0.34"
hex = "0.4.2"
bstr = { version = "1.0.1", default-features = false, features = ["std", "unicode"] }
nom = { version = "7", default-features = false, features = ["std"]}
smallvec = { version = "1.4.0", features = ["write"] }
serde = { version = "1.0.114", optional = true, default-features = false, features = ["derive"]}

document-features = { version = "0.2.0", optional = true }

[dev-dependencies]
pretty_assertions = "1.0.0"
git-testtools = { path = "../tests/tools"}

[package.metadata.docs.rs]
all-features = true
features = ["document-features"]
rustdoc-args = ["--cfg", "docsrs"]

